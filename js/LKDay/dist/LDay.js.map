{"version":3,"file":"LDay.js","mappings":"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","sources":["webpack://LDay/webpack/universalModuleDefinition","webpack://LDay/./src/LDay.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LDay\"] = factory();\n\telse\n\t\troot[\"LDay\"] = factory();\n})(self, () => {\nreturn ","class Day {\r\n  private date: Date;\r\n  private $Y: number;\r\n  private $M: number;\r\n  private $D: number;\r\n  private $W: number;\r\n  private $h: number;\r\n  private $m: number;\r\n  private $s: number;\r\n  private $t: number;\r\n  private $L: boolean;\r\n  protected Months: Array<number>;\r\n\r\n  constructor(date?: string | number) {\r\n    this.date = date ? new Date(date) : new Date();\r\n    this.Months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n    this.$Y = this.date.getFullYear();\r\n    this.$M = this.date.getMonth() + 1;\r\n    this.$D = this.date.getDate();\r\n    this.$W = this.date.getDay();\r\n    this.$h = this.date.getHours();\r\n    this.$m = this.date.getMinutes();\r\n    this.$s = this.date.getSeconds();\r\n    this.$t = this.date.getTime();\r\n    this.$L = this.isLeap();\r\n  }\r\n\r\n  /* 判断是否是闰年 */\r\n  isLeap() {\r\n    let flag = (this.$Y % 4 === 0 && this.$Y !== 0) || this.$Y % 400 === 0;\r\n    if (flag) {\r\n      this.Months[1] = 29;\r\n    }\r\n    return (this.$Y % 4 === 0 && this.$Y !== 0) || this.$Y % 400 === 0;\r\n  }\r\n\r\n  /* 格式化 */\r\n  format(pattern: string = \"YYYY-MM-DD\") {\r\n    switch (pattern) {\r\n      case \"YYYY-MM-DD\":\r\n        return `${this.$Y.toString().padStart(4, \"0\")}-${this.$M\r\n          .toString()\r\n          .padStart(2, \"0\")}-${this.$D.toString().padStart(2, \"0\")}`;\r\n      default: {\r\n        return `${this.$Y}-${this.$M}-${this.$D}`;\r\n      }\r\n    }\r\n  }\r\n\r\n  /* 是否相同时间 */\r\n  isSame(otherDate: Day) {\r\n    return this.$t - otherDate.$t === 0;\r\n  }\r\n\r\n  /* 获取是一周第几天 */\r\n  day() {\r\n    return this.$W === 0 ? 7 : this.$W;\r\n  }\r\n\r\n  /* 一年内第几天 */\r\n  dayOfYear() {\r\n    let num = this.$D;\r\n    for (let i = 0; i < this.$M - 1; i++) {\r\n      num += this.Months[i];\r\n    }\r\n    if (this.$L) {\r\n      num++;\r\n    }\r\n    return num;\r\n  }\r\n\r\n  /* 一年内第几周 */\r\n  week() {\r\n    const firstday = new Date(`${this.$Y} 1 1`);\r\n    const diff = this.$t - firstday.getTime();\r\n    const days = Math.ceil(diff / 86400000);\r\n    return Math.ceil(days / 7) + 1;\r\n  }\r\n\r\n  /* 加 */\r\n  add(num: number, key: string): Day {\r\n    let Y = this.$Y;\r\n    let M = this.$M;\r\n    let t = this.$t;\r\n    let nums;\r\n    const keys = [\"y\", \"year\", \"M\", \"month\"];\r\n    let flag = keys.includes(key);\r\n    function addT(num: number) {\r\n      let res = t + num;\r\n      return res;\r\n    }\r\n    switch (key) {\r\n      case \"y\":\r\n      case \"year\":\r\n        Y = Y + num;\r\n        break;\r\n      case \"M\":\r\n      case \"month\":\r\n        M = M + num;\r\n        if (M > 12) {\r\n          Y = Y + Math.floor(M / 12);\r\n          M = M % 12;\r\n        }\r\n        break;\r\n      case \"d\":\r\n      case \"date\":\r\n        nums = num * 1000 * 60 * 60 * 24;\r\n        break;\r\n      case \"h\":\r\n      case \"hour\":\r\n        nums = num * 1000 * 60 * 60;\r\n        break;\r\n      case \"m\":\r\n      case \"minute\":\r\n        nums = num * 1000 * 60;\r\n        break;\r\n      case \"s\":\r\n      case \"second\":\r\n        nums = num * 1000;\r\n        break;\r\n      case \"ms\":\r\n      case \"millisecond\":\r\n        break;\r\n    }\r\n    let para = flag\r\n      ? `${Y} ${M} ${this.$D} ${this.$h}:${this.$m}:${this.$s}`\r\n      : addT(nums as number);\r\n\r\n    return new Day(para);\r\n  }\r\n\r\n  /* 减 */\r\n  subtract(num: number, key: string): Day {\r\n    let Y = this.$Y;\r\n    let M = this.$M;\r\n    let t = this.$t;\r\n    let nums;\r\n    const keys = [\"y\", \"year\", \"M\", \"month\"];\r\n    let flag = keys.includes(key);\r\n    function subT(num: number) {\r\n      let res = t - num;\r\n      return res;\r\n    }\r\n    switch (key) {\r\n      case \"y\":\r\n      case \"year\":\r\n        Y = Y - num;\r\n        break;\r\n      case \"M\":\r\n      case \"month\":\r\n        M = M - num;\r\n        if (M < 0) {\r\n          let n = Math.floor(M / 12);\r\n          Y = Y + n;\r\n          M = Math.abs(n) * 12 + M;\r\n          if (M === 0) {\r\n            Y = Y - 1;\r\n            M = 12;\r\n          }\r\n        } else if (M === 0) {\r\n          Y = Y - 1;\r\n          M = 12;\r\n        }\r\n        break;\r\n      case \"d\":\r\n      case \"date\":\r\n        nums = num * 1000 * 60 * 60 * 24;\r\n        break;\r\n      case \"h\":\r\n      case \"hour\":\r\n        nums = num * 1000 * 60 * 60;\r\n        break;\r\n      case \"m\":\r\n      case \"minute\":\r\n        nums = num * 1000 * 60;\r\n        break;\r\n      case \"s\":\r\n      case \"second\":\r\n        nums = num * 1000;\r\n        break;\r\n      case \"ms\":\r\n      case \"millisecond\":\r\n        break;\r\n    }\r\n    let para = flag\r\n      ? `${Y} ${M} ${this.$D} ${this.$h}:${this.$m}:${this.$s}`\r\n      : subT(nums as number);\r\n\r\n    return new Day(para);\r\n  }\r\n\r\n  /* 获取本月天数 */\r\n  daysInMonth() {\r\n    return this.Months[this.$M - 1];\r\n  }\r\n\r\n  /* 获取数据 */\r\n  get(id?: string) {\r\n    let key = id || \"\";\r\n    switch (key) {\r\n      case \"y\":\r\n      case \"year\":\r\n        return this.$Y;\r\n      case \"M\":\r\n      case \"month\":\r\n        return this.$M;\r\n      case \"d\":\r\n      case \"date\":\r\n        return this.$D;\r\n      case \"h\":\r\n      case \"hour\":\r\n        return this.$h;\r\n      case \"m\":\r\n      case \"minute\":\r\n        return this.$m;\r\n      case \"s\":\r\n      case \"second\":\r\n        return this.$s;\r\n      case \"ms\":\r\n      case \"millisecond\":\r\n        return this.$t;\r\n      case \"w\":\r\n      case \"day\":\r\n        return this.$W;\r\n      default:\r\n        return this[key as keyof Day];\r\n    }\r\n  }\r\n\r\n  /* 格式转换 */\r\n  toArray() {\r\n    // 年 月 日 时 分 秒 星期几(从0开始)\r\n    return [\r\n      this.$Y,\r\n      this.$M,\r\n      this.$D,\r\n      this.$h,\r\n      this.$m,\r\n      this.$s,\r\n      this.$W === 0 ? 7 : this.$W,\r\n    ];\r\n  }\r\n}\r\n\r\n/* 构造函数 */\r\nexport default function Lday(date?: string) {\r\n  return new Day(date);\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","date","this","Date","Months","$Y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$h","getHours","$m","getMinutes","$s","getSeconds","$t","getTime","$L","isLeap","format","pattern","toString","padStart","isSame","otherDate","day","dayOfYear","num","i","week","firstday","diff","days","Math","ceil","add","key","nums","Y","M","t","flag","includes","floor","para","addT","Day","subtract","n","abs","subT","daysInMonth","get","id","toArray"],"sourceRoot":""}